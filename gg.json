{ "fruits":[
"ewogICJkbnMiOiB7CiAgICAiaG9zdHMiOiB7CiAgICAgICJkb21haW46Z29vZ2xlYXBpcy5jbiI6ICJnb29nbGVhcGlzLmNvbSIKICAgIH0sCiAgICAic2VydmVycyI6IFsKICAgICAgIjEuMS4xLjEiCiAgICBdCiAgfSwKICAiaW5ib3VuZHMiOiBbCiAgICB7CiAgICAgICJsaXN0ZW4iOiAiMTI3LjAuMC4xIiwKICAgICAgInBvcnQiOiAxMDgwOCwKICAgICAgInByb3RvY29sIjogInNvY2tzIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJhdXRoIjogIm5vYXV0aCIsCiAgICAgICAgInVkcCI6IHRydWUsCiAgICAgICAgInVzZXJMZXZlbCI6IDgKICAgICAgfSwKICAgICAgInNuaWZmaW5nIjogewogICAgICAgICJkZXN0T3ZlcnJpZGUiOiBbCiAgICAgICAgICAiaHR0cCIsCiAgICAgICAgICAidGxzIgogICAgICAgIF0sCiAgICAgICAgImVuYWJsZWQiOiB0cnVlCiAgICAgIH0sCiAgICAgICJ0YWciOiAic29ja3MiCiAgICB9LAogICAgewogICAgICAibGlzdGVuIjogIjEyNy4wLjAuMSIsCiAgICAgICJwb3J0IjogMTA4MDksCiAgICAgICJwcm90b2NvbCI6ICJodHRwIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJ1c2VyTGV2ZWwiOiA4CiAgICAgIH0sCiAgICAgICJ0YWciOiAiaHR0cCIKICAgIH0KICBdLAogICJsb2ciOiB7CiAgICAibG9nbGV2ZWwiOiAid2FybmluZyIKICB9LAogICJvdXRib3VuZHMiOiBbCiAgICB7CiAgICAgICJtdXgiOiB7CiAgICAgICAgImNvbmN1cnJlbmN5IjogOCwKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJwcm90b2NvbCI6ICJ2bGVzcyIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAidm5leHQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJhZGRyZXNzIjogIjkzODc3OWIyLm5pcC5pbyIsCiAgICAgICAgICAgICJwb3J0IjogMzE5NzAsCiAgICAgICAgICAgICJ1c2VycyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiZW5jcnlwdGlvbiI6ICJub25lIiwKICAgICAgICAgICAgICAgICJmbG93IjogIiIsCiAgICAgICAgICAgICAgICAiaWQiOiAiMDE4MjA2OTAtMjUwYy00NDMwLTllZGMtYzczYWY2ZDFjNGQ4IiwKICAgICAgICAgICAgICAgICJsZXZlbCI6IDgsCiAgICAgICAgICAgICAgICAic2VjdXJpdHkiOiAiYXV0byIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJzdHJlYW1TZXR0aW5ncyI6IHsKICAgICAgICAibmV0d29yayI6ICJ0Y3AiLAogICAgICAgICJzZWN1cml0eSI6ICIiLAogICAgICAgICJ0Y3BTZXR0aW5ncyI6IHsKICAgICAgICAgICJoZWFkZXIiOiB7CiAgICAgICAgICAgICJyZXF1ZXN0IjogewogICAgICAgICAgICAgICJoZWFkZXJzIjogewogICAgICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiBbCiAgICAgICAgICAgICAgICAgICJrZWVwLWFsaXZlIgogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJIb3N0IjogWwogICAgICAgICAgICAgICAgICAiaW50ZXJuZXQubGlmZS5jb20uYnkiCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlByYWdtYSI6ICJuby1jYWNoZSIsCiAgICAgICAgICAgICAgICAiQWNjZXB0LUVuY29kaW5nIjogWwogICAgICAgICAgICAgICAgICAiZ3ppcCwgZGVmbGF0ZSIKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVXNlci1BZ2VudCI6IFsKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTMuMC4yNzg1LjE0MyBTYWZhcmkvNTM3LjM2IiwKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgMTBfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xIChLSFRNTCwgbGlrZSBHZWNrbykgQ3JpT1MvNTMuMC4yNzg1LjEwOSBNb2JpbGUvMTRBNDU2IFNhZmFyaS82MDEuMS40NiIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJtZXRob2QiOiAiR0VUIiwKICAgICAgICAgICAgICAicGF0aCI6IFsKICAgICAgICAgICAgICAgICIvIgogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInZlcnNpb24iOiAiMS4xIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJwcm94eSIKICAgIH0sCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJmcmVlZG9tIiwKICAgICAgInNldHRpbmdzIjoge30sCiAgICAgICJ0YWciOiAiZGlyZWN0IgogICAgfSwKICAgIHsKICAgICAgInByb3RvY29sIjogImJsYWNraG9sZSIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAicmVzcG9uc2UiOiB7CiAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJibG9jayIKICAgIH0KICBdLAogICJyb3V0aW5nIjogewogICAgImRvbWFpblN0cmF0ZWd5IjogIklQSWZOb25NYXRjaCIsCiAgICAicnVsZXMiOiBbCiAgICAgIHsKICAgICAgICAiaXAiOiBbCiAgICAgICAgICAiMS4xLjEuMSIKICAgICAgICBdLAogICAgICAgICJvdXRib3VuZFRhZyI6ICJwcm94eSIsCiAgICAgICAgInBvcnQiOiAiNTMiLAogICAgICAgICJ0eXBlIjogImZpZWxkIgogICAgICB9CiAgICBdCiAgfQp9", 
"ewogICJkbnMiOiB7CiAgICAiaG9zdHMiOiB7CiAgICAgICJkb21haW46Z29vZ2xlYXBpcy5jbiI6ICJnb29nbGVhcGlzLmNvbSIKICAgIH0sCiAgICAic2VydmVycyI6IFsKICAgICAgIjEuMS4xLjEiCiAgICBdCiAgfSwKICAiaW5ib3VuZHMiOiBbCiAgICB7CiAgICAgICJsaXN0ZW4iOiAiMTI3LjAuMC4xIiwKICAgICAgInBvcnQiOiAxMDgwOCwKICAgICAgInByb3RvY29sIjogInNvY2tzIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJhdXRoIjogIm5vYXV0aCIsCiAgICAgICAgInVkcCI6IHRydWUsCiAgICAgICAgInVzZXJMZXZlbCI6IDgKICAgICAgfSwKICAgICAgInNuaWZmaW5nIjogewogICAgICAgICJkZXN0T3ZlcnJpZGUiOiBbCiAgICAgICAgICAiaHR0cCIsCiAgICAgICAgICAidGxzIgogICAgICAgIF0sCiAgICAgICAgImVuYWJsZWQiOiB0cnVlCiAgICAgIH0sCiAgICAgICJ0YWciOiAic29ja3MiCiAgICB9LAogICAgewogICAgICAibGlzdGVuIjogIjEyNy4wLjAuMSIsCiAgICAgICJwb3J0IjogMTA4MDksCiAgICAgICJwcm90b2NvbCI6ICJodHRwIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJ1c2VyTGV2ZWwiOiA4CiAgICAgIH0sCiAgICAgICJ0YWciOiAiaHR0cCIKICAgIH0KICBdLAogICJsb2ciOiB7CiAgICAibG9nbGV2ZWwiOiAid2FybmluZyIKICB9LAogICJvdXRib3VuZHMiOiBbCiAgICB7CiAgICAgICJtdXgiOiB7CiAgICAgICAgImNvbmN1cnJlbmN5IjogOCwKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJwcm90b2NvbCI6ICJ2bGVzcyIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAidm5leHQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJhZGRyZXNzIjogIjkzODc3OWIyLm5pcC5pbyIsCiAgICAgICAgICAgICJwb3J0IjogMzE5NzAsCiAgICAgICAgICAgICJ1c2VycyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiZW5jcnlwdGlvbiI6ICJub25lIiwKICAgICAgICAgICAgICAgICJmbG93IjogIiIsCiAgICAgICAgICAgICAgICAiaWQiOiAiMDE4MjA2OTAtMjUwYy00NDMwLTllZGMtYzczYWY2ZDFjNGQ4IiwKICAgICAgICAgICAgICAgICJsZXZlbCI6IDgsCiAgICAgICAgICAgICAgICAic2VjdXJpdHkiOiAiYXV0byIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJzdHJlYW1TZXR0aW5ncyI6IHsKICAgICAgICAibmV0d29yayI6ICJ0Y3AiLAogICAgICAgICJzZWN1cml0eSI6ICIiLAogICAgICAgICJ0Y3BTZXR0aW5ncyI6IHsKICAgICAgICAgICJoZWFkZXIiOiB7CiAgICAgICAgICAgICJyZXF1ZXN0IjogewogICAgICAgICAgICAgICJoZWFkZXJzIjogewogICAgICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiBbCiAgICAgICAgICAgICAgICAgICJrZWVwLWFsaXZlIgogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJIb3N0IjogWwogICAgICAgICAgICAgICAgICAiaW50ZXJuZXQubGlmZS5jb20uYnkiCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlByYWdtYSI6ICJuby1jYWNoZSIsCiAgICAgICAgICAgICAgICAiQWNjZXB0LUVuY29kaW5nIjogWwogICAgICAgICAgICAgICAgICAiZ3ppcCwgZGVmbGF0ZSIKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVXNlci1BZ2VudCI6IFsKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTMuMC4yNzg1LjE0MyBTYWZhcmkvNTM3LjM2IiwKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgMTBfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xIChLSFRNTCwgbGlrZSBHZWNrbykgQ3JpT1MvNTMuMC4yNzg1LjEwOSBNb2JpbGUvMTRBNDU2IFNhZmFyaS82MDEuMS40NiIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJtZXRob2QiOiAiR0VUIiwKICAgICAgICAgICAgICAicGF0aCI6IFsKICAgICAgICAgICAgICAgICIvIgogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInZlcnNpb24iOiAiMS4xIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJwcm94eSIKICAgIH0sCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJmcmVlZG9tIiwKICAgICAgInNldHRpbmdzIjoge30sCiAgICAgICJ0YWciOiAiZGlyZWN0IgogICAgfSwKICAgIHsKICAgICAgInByb3RvY29sIjogImJsYWNraG9sZSIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAicmVzcG9uc2UiOiB7CiAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJibG9jayIKICAgIH0KICBdLAogICJyb3V0aW5nIjogewogICAgImRvbWFpblN0cmF0ZWd5IjogIklQSWZOb25NYXRjaCIsCiAgICAicnVsZXMiOiBbCiAgICAgIHsKICAgICAgICAiaXAiOiBbCiAgICAgICAgICAiMS4xLjEuMSIKICAgICAgICBdLAogICAgICAgICJvdXRib3VuZFRhZyI6ICJwcm94eSIsCiAgICAgICAgInBvcnQiOiAiNTMiLAogICAgICAgICJ0eXBlIjogImZpZWxkIgogICAgICB9CiAgICBdCiAgfQp9", 
"ewogICJkbnMiOiB7CiAgICAiaG9zdHMiOiB7CiAgICAgICJkb21haW46Z29vZ2xlYXBpcy5jbiI6ICJnb29nbGVhcGlzLmNvbSIKICAgIH0sCiAgICAic2VydmVycyI6IFsKICAgICAgIjEuMS4xLjEiCiAgICBdCiAgfSwKICAiaW5ib3VuZHMiOiBbCiAgICB7CiAgICAgICJsaXN0ZW4iOiAiMTI3LjAuMC4xIiwKICAgICAgInBvcnQiOiAxMDgwOCwKICAgICAgInByb3RvY29sIjogInNvY2tzIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJhdXRoIjogIm5vYXV0aCIsCiAgICAgICAgInVkcCI6IHRydWUsCiAgICAgICAgInVzZXJMZXZlbCI6IDgKICAgICAgfSwKICAgICAgInNuaWZmaW5nIjogewogICAgICAgICJkZXN0T3ZlcnJpZGUiOiBbCiAgICAgICAgICAiaHR0cCIsCiAgICAgICAgICAidGxzIgogICAgICAgIF0sCiAgICAgICAgImVuYWJsZWQiOiB0cnVlCiAgICAgIH0sCiAgICAgICJ0YWciOiAic29ja3MiCiAgICB9LAogICAgewogICAgICAibGlzdGVuIjogIjEyNy4wLjAuMSIsCiAgICAgICJwb3J0IjogMTA4MDksCiAgICAgICJwcm90b2NvbCI6ICJodHRwIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJ1c2VyTGV2ZWwiOiA4CiAgICAgIH0sCiAgICAgICJ0YWciOiAiaHR0cCIKICAgIH0KICBdLAogICJsb2ciOiB7CiAgICAibG9nbGV2ZWwiOiAid2FybmluZyIKICB9LAogICJvdXRib3VuZHMiOiBbCiAgICB7CiAgICAgICJtdXgiOiB7CiAgICAgICAgImNvbmN1cnJlbmN5IjogOCwKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJwcm90b2NvbCI6ICJ2bGVzcyIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAidm5leHQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJhZGRyZXNzIjogIjkzODc3OWIyLm5pcC5pbyIsCiAgICAgICAgICAgICJwb3J0IjogMzE5NzAsCiAgICAgICAgICAgICJ1c2VycyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiZW5jcnlwdGlvbiI6ICJub25lIiwKICAgICAgICAgICAgICAgICJmbG93IjogIiIsCiAgICAgICAgICAgICAgICAiaWQiOiAiMDE4MjA2OTAtMjUwYy00NDMwLTllZGMtYzczYWY2ZDFjNGQ4IiwKICAgICAgICAgICAgICAgICJsZXZlbCI6IDgsCiAgICAgICAgICAgICAgICAic2VjdXJpdHkiOiAiYXV0byIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJzdHJlYW1TZXR0aW5ncyI6IHsKICAgICAgICAibmV0d29yayI6ICJ0Y3AiLAogICAgICAgICJzZWN1cml0eSI6ICIiLAogICAgICAgICJ0Y3BTZXR0aW5ncyI6IHsKICAgICAgICAgICJoZWFkZXIiOiB7CiAgICAgICAgICAgICJyZXF1ZXN0IjogewogICAgICAgICAgICAgICJoZWFkZXJzIjogewogICAgICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiBbCiAgICAgICAgICAgICAgICAgICJrZWVwLWFsaXZlIgogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJIb3N0IjogWwogICAgICAgICAgICAgICAgICAiaW50ZXJuZXQubGlmZS5jb20uYnkiCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlByYWdtYSI6ICJuby1jYWNoZSIsCiAgICAgICAgICAgICAgICAiQWNjZXB0LUVuY29kaW5nIjogWwogICAgICAgICAgICAgICAgICAiZ3ppcCwgZGVmbGF0ZSIKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVXNlci1BZ2VudCI6IFsKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTMuMC4yNzg1LjE0MyBTYWZhcmkvNTM3LjM2IiwKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgMTBfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xIChLSFRNTCwgbGlrZSBHZWNrbykgQ3JpT1MvNTMuMC4yNzg1LjEwOSBNb2JpbGUvMTRBNDU2IFNhZmFyaS82MDEuMS40NiIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJtZXRob2QiOiAiR0VUIiwKICAgICAgICAgICAgICAicGF0aCI6IFsKICAgICAgICAgICAgICAgICIvIgogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInZlcnNpb24iOiAiMS4xIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJwcm94eSIKICAgIH0sCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJmcmVlZG9tIiwKICAgICAgInNldHRpbmdzIjoge30sCiAgICAgICJ0YWciOiAiZGlyZWN0IgogICAgfSwKICAgIHsKICAgICAgInByb3RvY29sIjogImJsYWNraG9sZSIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAicmVzcG9uc2UiOiB7CiAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJibG9jayIKICAgIH0KICBdLAogICJyb3V0aW5nIjogewogICAgImRvbWFpblN0cmF0ZWd5IjogIklQSWZOb25NYXRjaCIsCiAgICAicnVsZXMiOiBbCiAgICAgIHsKICAgICAgICAiaXAiOiBbCiAgICAgICAgICAiMS4xLjEuMSIKICAgICAgICBdLAogICAgICAgICJvdXRib3VuZFRhZyI6ICJwcm94eSIsCiAgICAgICAgInBvcnQiOiAiNTMiLAogICAgICAgICJ0eXBlIjogImZpZWxkIgogICAgICB9CiAgICBdCiAgfQp9",
"ewogICJkbnMiOiB7CiAgICAiaG9zdHMiOiB7CiAgICAgICJkb21haW46Z29vZ2xlYXBpcy5jbiI6ICJnb29nbGVhcGlzLmNvbSIKICAgIH0sCiAgICAic2VydmVycyI6IFsKICAgICAgIjEuMS4xLjEiCiAgICBdCiAgfSwKICAiaW5ib3VuZHMiOiBbCiAgICB7CiAgICAgICJsaXN0ZW4iOiAiMTI3LjAuMC4xIiwKICAgICAgInBvcnQiOiAxMDgwOCwKICAgICAgInByb3RvY29sIjogInNvY2tzIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJhdXRoIjogIm5vYXV0aCIsCiAgICAgICAgInVkcCI6IHRydWUsCiAgICAgICAgInVzZXJMZXZlbCI6IDgKICAgICAgfSwKICAgICAgInNuaWZmaW5nIjogewogICAgICAgICJkZXN0T3ZlcnJpZGUiOiBbCiAgICAgICAgICAiaHR0cCIsCiAgICAgICAgICAidGxzIgogICAgICAgIF0sCiAgICAgICAgImVuYWJsZWQiOiB0cnVlCiAgICAgIH0sCiAgICAgICJ0YWciOiAic29ja3MiCiAgICB9LAogICAgewogICAgICAibGlzdGVuIjogIjEyNy4wLjAuMSIsCiAgICAgICJwb3J0IjogMTA4MDksCiAgICAgICJwcm90b2NvbCI6ICJodHRwIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJ1c2VyTGV2ZWwiOiA4CiAgICAgIH0sCiAgICAgICJ0YWciOiAiaHR0cCIKICAgIH0KICBdLAogICJsb2ciOiB7CiAgICAibG9nbGV2ZWwiOiAid2FybmluZyIKICB9LAogICJvdXRib3VuZHMiOiBbCiAgICB7CiAgICAgICJtdXgiOiB7CiAgICAgICAgImNvbmN1cnJlbmN5IjogOCwKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJwcm90b2NvbCI6ICJ2bGVzcyIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAidm5leHQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJhZGRyZXNzIjogIjkzODc3OWIyLm5pcC5pbyIsCiAgICAgICAgICAgICJwb3J0IjogMzE5NzAsCiAgICAgICAgICAgICJ1c2VycyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiZW5jcnlwdGlvbiI6ICJub25lIiwKICAgICAgICAgICAgICAgICJmbG93IjogIiIsCiAgICAgICAgICAgICAgICAiaWQiOiAiMDE4MjA2OTAtMjUwYy00NDMwLTllZGMtYzczYWY2ZDFjNGQ4IiwKICAgICAgICAgICAgICAgICJsZXZlbCI6IDgsCiAgICAgICAgICAgICAgICAic2VjdXJpdHkiOiAiYXV0byIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJzdHJlYW1TZXR0aW5ncyI6IHsKICAgICAgICAibmV0d29yayI6ICJ0Y3AiLAogICAgICAgICJzZWN1cml0eSI6ICIiLAogICAgICAgICJ0Y3BTZXR0aW5ncyI6IHsKICAgICAgICAgICJoZWFkZXIiOiB7CiAgICAgICAgICAgICJyZXF1ZXN0IjogewogICAgICAgICAgICAgICJoZWFkZXJzIjogewogICAgICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiBbCiAgICAgICAgICAgICAgICAgICJrZWVwLWFsaXZlIgogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJIb3N0IjogWwogICAgICAgICAgICAgICAgICAiaW50ZXJuZXQubGlmZS5jb20uYnkiCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlByYWdtYSI6ICJuby1jYWNoZSIsCiAgICAgICAgICAgICAgICAiQWNjZXB0LUVuY29kaW5nIjogWwogICAgICAgICAgICAgICAgICAiZ3ppcCwgZGVmbGF0ZSIKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVXNlci1BZ2VudCI6IFsKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTMuMC4yNzg1LjE0MyBTYWZhcmkvNTM3LjM2IiwKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgMTBfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xIChLSFRNTCwgbGlrZSBHZWNrbykgQ3JpT1MvNTMuMC4yNzg1LjEwOSBNb2JpbGUvMTRBNDU2IFNhZmFyaS82MDEuMS40NiIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJtZXRob2QiOiAiR0VUIiwKICAgICAgICAgICAgICAicGF0aCI6IFsKICAgICAgICAgICAgICAgICIvIgogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInZlcnNpb24iOiAiMS4xIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJwcm94eSIKICAgIH0sCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJmcmVlZG9tIiwKICAgICAgInNldHRpbmdzIjoge30sCiAgICAgICJ0YWciOiAiZGlyZWN0IgogICAgfSwKICAgIHsKICAgICAgInByb3RvY29sIjogImJsYWNraG9sZSIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAicmVzcG9uc2UiOiB7CiAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJibG9jayIKICAgIH0KICBdLAogICJyb3V0aW5nIjogewogICAgImRvbWFpblN0cmF0ZWd5IjogIklQSWZOb25NYXRjaCIsCiAgICAicnVsZXMiOiBbCiAgICAgIHsKICAgICAgICAiaXAiOiBbCiAgICAgICAgICAiMS4xLjEuMSIKICAgICAgICBdLAogICAgICAgICJvdXRib3VuZFRhZyI6ICJwcm94eSIsCiAgICAgICAgInBvcnQiOiAiNTMiLAogICAgICAgICJ0eXBlIjogImZpZWxkIgogICAgICB9CiAgICBdCiAgfQp9",
"ewogICJkbnMiOiB7CiAgICAiaG9zdHMiOiB7CiAgICAgICJkb21haW46Z29vZ2xlYXBpcy5jbiI6ICJnb29nbGVhcGlzLmNvbSIKICAgIH0sCiAgICAic2VydmVycyI6IFsKICAgICAgIjEuMS4xLjEiCiAgICBdCiAgfSwKICAiaW5ib3VuZHMiOiBbCiAgICB7CiAgICAgICJsaXN0ZW4iOiAiMTI3LjAuMC4xIiwKICAgICAgInBvcnQiOiAxMDgwOCwKICAgICAgInByb3RvY29sIjogInNvY2tzIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJhdXRoIjogIm5vYXV0aCIsCiAgICAgICAgInVkcCI6IHRydWUsCiAgICAgICAgInVzZXJMZXZlbCI6IDgKICAgICAgfSwKICAgICAgInNuaWZmaW5nIjogewogICAgICAgICJkZXN0T3ZlcnJpZGUiOiBbCiAgICAgICAgICAiaHR0cCIsCiAgICAgICAgICAidGxzIgogICAgICAgIF0sCiAgICAgICAgImVuYWJsZWQiOiB0cnVlCiAgICAgIH0sCiAgICAgICJ0YWciOiAic29ja3MiCiAgICB9LAogICAgewogICAgICAibGlzdGVuIjogIjEyNy4wLjAuMSIsCiAgICAgICJwb3J0IjogMTA4MDksCiAgICAgICJwcm90b2NvbCI6ICJodHRwIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJ1c2VyTGV2ZWwiOiA4CiAgICAgIH0sCiAgICAgICJ0YWciOiAiaHR0cCIKICAgIH0KICBdLAogICJsb2ciOiB7CiAgICAibG9nbGV2ZWwiOiAid2FybmluZyIKICB9LAogICJvdXRib3VuZHMiOiBbCiAgICB7CiAgICAgICJtdXgiOiB7CiAgICAgICAgImNvbmN1cnJlbmN5IjogOCwKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJwcm90b2NvbCI6ICJ2bGVzcyIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAidm5leHQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJhZGRyZXNzIjogIjkzODc3OWIyLm5pcC5pbyIsCiAgICAgICAgICAgICJwb3J0IjogMzE5NzAsCiAgICAgICAgICAgICJ1c2VycyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiZW5jcnlwdGlvbiI6ICJub25lIiwKICAgICAgICAgICAgICAgICJmbG93IjogIiIsCiAgICAgICAgICAgICAgICAiaWQiOiAiMDE4MjA2OTAtMjUwYy00NDMwLTllZGMtYzczYWY2ZDFjNGQ4IiwKICAgICAgICAgICAgICAgICJsZXZlbCI6IDgsCiAgICAgICAgICAgICAgICAic2VjdXJpdHkiOiAiYXV0byIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJzdHJlYW1TZXR0aW5ncyI6IHsKICAgICAgICAibmV0d29yayI6ICJ0Y3AiLAogICAgICAgICJzZWN1cml0eSI6ICIiLAogICAgICAgICJ0Y3BTZXR0aW5ncyI6IHsKICAgICAgICAgICJoZWFkZXIiOiB7CiAgICAgICAgICAgICJyZXF1ZXN0IjogewogICAgICAgICAgICAgICJoZWFkZXJzIjogewogICAgICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiBbCiAgICAgICAgICAgICAgICAgICJrZWVwLWFsaXZlIgogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJIb3N0IjogWwogICAgICAgICAgICAgICAgICAiaW50ZXJuZXQubGlmZS5jb20uYnkiCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlByYWdtYSI6ICJuby1jYWNoZSIsCiAgICAgICAgICAgICAgICAiQWNjZXB0LUVuY29kaW5nIjogWwogICAgICAgICAgICAgICAgICAiZ3ppcCwgZGVmbGF0ZSIKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVXNlci1BZ2VudCI6IFsKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTMuMC4yNzg1LjE0MyBTYWZhcmkvNTM3LjM2IiwKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgMTBfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xIChLSFRNTCwgbGlrZSBHZWNrbykgQ3JpT1MvNTMuMC4yNzg1LjEwOSBNb2JpbGUvMTRBNDU2IFNhZmFyaS82MDEuMS40NiIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJtZXRob2QiOiAiR0VUIiwKICAgICAgICAgICAgICAicGF0aCI6IFsKICAgICAgICAgICAgICAgICIvIgogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInZlcnNpb24iOiAiMS4xIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJwcm94eSIKICAgIH0sCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJmcmVlZG9tIiwKICAgICAgInNldHRpbmdzIjoge30sCiAgICAgICJ0YWciOiAiZGlyZWN0IgogICAgfSwKICAgIHsKICAgICAgInByb3RvY29sIjogImJsYWNraG9sZSIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAicmVzcG9uc2UiOiB7CiAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJibG9jayIKICAgIH0KICBdLAogICJyb3V0aW5nIjogewogICAgImRvbWFpblN0cmF0ZWd5IjogIklQSWZOb25NYXRjaCIsCiAgICAicnVsZXMiOiBbCiAgICAgIHsKICAgICAgICAiaXAiOiBbCiAgICAgICAgICAiMS4xLjEuMSIKICAgICAgICBdLAogICAgICAgICJvdXRib3VuZFRhZyI6ICJwcm94eSIsCiAgICAgICAgInBvcnQiOiAiNTMiLAogICAgICAgICJ0eXBlIjogImZpZWxkIgogICAgICB9CiAgICBdCiAgfQp9",   
"ewogICJkbnMiOiB7CiAgICAiaG9zdHMiOiB7CiAgICAgICJkb21haW46Z29vZ2xlYXBpcy5jbiI6ICJnb29nbGVhcGlzLmNvbSIKICAgIH0sCiAgICAic2VydmVycyI6IFsKICAgICAgIjEuMS4xLjEiCiAgICBdCiAgfSwKICAiaW5ib3VuZHMiOiBbCiAgICB7CiAgICAgICJsaXN0ZW4iOiAiMTI3LjAuMC4xIiwKICAgICAgInBvcnQiOiAxMDgwOCwKICAgICAgInByb3RvY29sIjogInNvY2tzIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJhdXRoIjogIm5vYXV0aCIsCiAgICAgICAgInVkcCI6IHRydWUsCiAgICAgICAgInVzZXJMZXZlbCI6IDgKICAgICAgfSwKICAgICAgInNuaWZmaW5nIjogewogICAgICAgICJkZXN0T3ZlcnJpZGUiOiBbCiAgICAgICAgICAiaHR0cCIsCiAgICAgICAgICAidGxzIgogICAgICAgIF0sCiAgICAgICAgImVuYWJsZWQiOiB0cnVlCiAgICAgIH0sCiAgICAgICJ0YWciOiAic29ja3MiCiAgICB9LAogICAgewogICAgICAibGlzdGVuIjogIjEyNy4wLjAuMSIsCiAgICAgICJwb3J0IjogMTA4MDksCiAgICAgICJwcm90b2NvbCI6ICJodHRwIiwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJ1c2VyTGV2ZWwiOiA4CiAgICAgIH0sCiAgICAgICJ0YWciOiAiaHR0cCIKICAgIH0KICBdLAogICJsb2ciOiB7CiAgICAibG9nbGV2ZWwiOiAid2FybmluZyIKICB9LAogICJvdXRib3VuZHMiOiBbCiAgICB7CiAgICAgICJtdXgiOiB7CiAgICAgICAgImNvbmN1cnJlbmN5IjogOCwKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJwcm90b2NvbCI6ICJ2bGVzcyIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAidm5leHQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJhZGRyZXNzIjogIjkzODc3OWIyLm5pcC5pbyIsCiAgICAgICAgICAgICJwb3J0IjogMzE5NzAsCiAgICAgICAgICAgICJ1c2VycyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiZW5jcnlwdGlvbiI6ICJub25lIiwKICAgICAgICAgICAgICAgICJmbG93IjogIiIsCiAgICAgICAgICAgICAgICAiaWQiOiAiMDE4MjA2OTAtMjUwYy00NDMwLTllZGMtYzczYWY2ZDFjNGQ4IiwKICAgICAgICAgICAgICAgICJsZXZlbCI6IDgsCiAgICAgICAgICAgICAgICAic2VjdXJpdHkiOiAiYXV0byIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJzdHJlYW1TZXR0aW5ncyI6IHsKICAgICAgICAibmV0d29yayI6ICJ0Y3AiLAogICAgICAgICJzZWN1cml0eSI6ICIiLAogICAgICAgICJ0Y3BTZXR0aW5ncyI6IHsKICAgICAgICAgICJoZWFkZXIiOiB7CiAgICAgICAgICAgICJyZXF1ZXN0IjogewogICAgICAgICAgICAgICJoZWFkZXJzIjogewogICAgICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiBbCiAgICAgICAgICAgICAgICAgICJrZWVwLWFsaXZlIgogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJIb3N0IjogWwogICAgICAgICAgICAgICAgICAiaW50ZXJuZXQubGlmZS5jb20uYnkiCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlByYWdtYSI6ICJuby1jYWNoZSIsCiAgICAgICAgICAgICAgICAiQWNjZXB0LUVuY29kaW5nIjogWwogICAgICAgICAgICAgICAgICAiZ3ppcCwgZGVmbGF0ZSIKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVXNlci1BZ2VudCI6IFsKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTMuMC4yNzg1LjE0MyBTYWZhcmkvNTM3LjM2IiwKICAgICAgICAgICAgICAgICAgIk1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgMTBfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xIChLSFRNTCwgbGlrZSBHZWNrbykgQ3JpT1MvNTMuMC4yNzg1LjEwOSBNb2JpbGUvMTRBNDU2IFNhZmFyaS82MDEuMS40NiIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJtZXRob2QiOiAiR0VUIiwKICAgICAgICAgICAgICAicGF0aCI6IFsKICAgICAgICAgICAgICAgICIvIgogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInZlcnNpb24iOiAiMS4xIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJwcm94eSIKICAgIH0sCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJmcmVlZG9tIiwKICAgICAgInNldHRpbmdzIjoge30sCiAgICAgICJ0YWciOiAiZGlyZWN0IgogICAgfSwKICAgIHsKICAgICAgInByb3RvY29sIjogImJsYWNraG9sZSIsCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAicmVzcG9uc2UiOiB7CiAgICAgICAgICAidHlwZSI6ICJodHRwIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJibG9jayIKICAgIH0KICBdLAogICJyb3V0aW5nIjogewogICAgImRvbWFpblN0cmF0ZWd5IjogIklQSWZOb25NYXRjaCIsCiAgICAicnVsZXMiOiBbCiAgICAgIHsKICAgICAgICAiaXAiOiBbCiAgICAgICAgICAiMS4xLjEuMSIKICAgICAgICBdLAogICAgICAgICJvdXRib3VuZFRhZyI6ICJwcm94eSIsCiAgICAgICAgInBvcnQiOiAiNTMiLAogICAgICAgICJ0eXBlIjogImZpZWxkIgogICAgICB9CiAgICBdCiAgfQp9"
   ] }
